---
# @file docker-compose.yml
# @brief Docker Compose configuration to build and start all Docker containers required for local development.
#
# @description This Docker Compose configuration serves the purpose of building and starting all
# the essential Docker containers required to facilitate the local development of both the website
# and the UI bundle. This configuration orchestrates this by starting multiple containers
# simultaneously. Each container within this Compose configuration corresponds to a distinct
# component or service of the development environment.
#
# | What (Container)  | URL (host-port)       | Info                                        |
# | ----------------- | --------------------- | ------------------------------------------- |
# | Website           | http://localhost:7888 | Antora-generated website with real contents (see xref:AUTO-GENERATED:Dockerfile.adoc[Dockerfile]) |
# | UI Bundle Preview | http://localhost:5252 | UI bundle preview for local development (see xref:AUTO-GENERATED:src/main/ui/material-admin-pro/ui-bundle/Dockerfile.adoc[src/main/ui/material-admin-pro/ui-bundle/Dockerfile]) |
# | UI HTML Template  | http://localhost:5353 | Serve the static HTML template files which form the foundation of the UI bundle (and hence the whole website UI) through an Apache webserver |
# | Chef InSpec       | -                     | Run Chef InSpec tests against the website container |
# | Loki              | -                     | Loki is a log aggregation system designed to store and query logs from applications and infrastructure. |
# | Loki Promtail     | -                     | Ship logfiles to loki |
# | Loki Grafana      | http://localhost:7000 | Visualize logfiles in dashboards |
#
# The Grafana Loki configuration integrated into this Docker stack functions as a blueprint. This
# setup collects logfiles from the apache serving the website. This blueprint can help with shipping
# logs from instances running in both test and production stages to link:https://grafana.com/products/cloud[Grafana Cloud].
#
# === About Host Port and Container Port
# It is important to note the distinction between ``HOST_PORT`` and ``CONTAINER_PORT``. Networked
# service-to-service communication uses the ``CONTAINER_PORT``. When ``HOST_PORT`` is defined, the
# service is accessible outside the compose stack as well.
#
# === Prerequisites
#
# This compose config has been developed and tested with Docker version 24.0.2 on top of
# Ubuntu 22.10.
#
# == How to use
#
# Make sure to control the image builds and containers by using the xref:AUTO-GENERATED:Makefile.adoc[Makefile].
#
# The ``make src/main/ui/material-admin-pro/ui-bundle/build/ui-bundle.zip`` is a mandatory prerequisite
# (which the Makefile ensures). Otherwise the build breaks due to a
# missing UI bundle.


version: "3.3"
services:

  ui-preview:
    container_name: ui-preview
    build: src/main/ui/material-admin-pro/ui-bundle
    image: local/ui-preview:dev
    ports:
      - 5252:5252
    volumes:
      - ./src/main/ui/material-admin-pro/ui-bundle:/ui-bundle

  ui-template:
    container_name: ui-template
    image: httpd:2.4.58-alpine3.19
    ports:
      - 5353:80
    volumes:
      - ./src/main/ui/material-admin-pro/template/pages:/usr/local/apache2/htdocs

  website:
    container_name: website
    build: .
    image: local/website:dev
    volumes:
      - ./target/logs/website-access.log:/usr/local/apache2/logs/access_log:rw
      - ./target/logs/website-error.log:/usr/local/apache2/logs/error_log:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 7888:7888
    depends_on:
      - ui-preview
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:7888 || exit 1"
      interval: 10s
      timeout: 2s
      retries: 16
      start_period: 5s

  inspec:
    container_name: inspec
    image: chef/inspec:5.22.36
    volumes:
      - ./src/test/inspec:/inspec
      - &docker-sock /var/run/docker.sock:/var/run/docker.sock
    working_dir: &work_dir /inspec
    command: exec website --target docker://website --chef-license=accept-no-persist
    depends_on:
      website:
        condition: service_healthy

  loki:
    container_name: loki
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/local-config.yaml

  loki-promtail:
    container_name: loki-promtail
    image: grafana/promtail:2.9.0
    volumes:
      - ./src/main/loki/promtail/config.yml:/etc/promtail/config.yml:ro
      - ./target/logs:/var/log:rw
    command: -config.file=/etc/promtail/config.yml

  loki-grafana:
    container_name: loki-grafana
    image: grafana/grafana:10.0.10
    volumes:
      - ./src/main/loki/grafana:/etc/grafana/provisioning:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 7000:3000
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
