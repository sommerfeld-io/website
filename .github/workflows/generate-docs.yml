---
# @file generate-docs.yml
# @brief GitHub Actions workflow that generates Asciidoc documentation based on source code from this repo and updates the projects README file.
#
# @description This GitHub Actions workflow serves the purpose of generating Asciidoc documentation
# based on the source code from the repository and updating the project's ``README.adoc`` based on
# contents from the Antora docs. It is designed to automatically trigger whenever new code is pushed
# to the remote repository. Additionally, it is scheduled to run each night to ensure the
# documentation is up-to-date.
#
# By utilizing this workflow, the project ensures that the Asciidoc documentation stays in sync with
# the latest code changes. This leads to improved documentation quality and better project
# understanding.


name: Generate Docs

on:
  push:
    # branches: [ "main", "feat/*", "release/*" ]
    branches-ignore:
      - dependabot/**

permissions:
  contents: write
  security-events: write

concurrency:
  group: "docs-as-code-${{ github.event.repository.name }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  adjust-version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        antora-yml-file: ['docs/antora.yml']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
      - name: Print Branchname
        run: echo ${{github.ref}}
        shell: bash
      - name: Adjust version in ${{ matrix.antora-yml-file }}
        uses: sebastian-sommerfeld-io/github-action-update-antora-yml@main
        with:
          git_ref: ${{github.ref}}
          file: ${{ matrix.antora-yml-file }}
      - name: Run yamllint for ${{ matrix.antora-yml-file }}
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: ${{ matrix.antora-yml-file }}
      - name: Commit and push
        uses: EndBug/add-and-commit@v9
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: "[Actions Bot] update antora yml"

  generate-docs:
    runs-on: ubuntu-latest
    needs: ['adjust-version']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
      - name: Generate docs from source code
        run: docker run --rm --volume "$(pwd):/project" --workdir "/project" sommerfeldio/source2docs:rc
        shell: bash
      - name: README.adoc
        uses: sebastian-sommerfeld-io/github-action-generate-readme@main
        with:
          caption: ${{ github.event.repository.name }}
      - name: LICENSE.adoc
        run: |
          TARGET_ADOC="LICENSE.adoc"
          cp docs/modules/ROOT/pages/license.adoc "$TARGET_ADOC"
          {
            echo
            echo "// +------------------------------------------+"
            echo "// |                                          |"
            echo "// |    DO NOT EDIT DIRECTLY !!!!!            |"
            echo "// |                                          |"
            echo "// |    File is auto-generated by pipline.    |"
            echo "// |    Contents are based on Antora docs.    |"
            echo "// |                                          |"
            echo "// +------------------------------------------+"
          } >> "$TARGET_ADOC"
        shell: bash
      - name: Commit and push
        uses: EndBug/add-and-commit@v9
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: "[Actions Bot] generate docs"

  # See https://intellij-asciidoc-plugin.ahus1.de/docs/users-guide/features/advanced/validation-cicd.html
  validate-adoc:
    runs-on: ubuntu-latest
    needs: ['generate-docs']
    if: github.ref == 'refs/heads/main'
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
          fetch-depth: 0
      - name: Download AsciiDoc plugin for AsciiDoc checks
        run: |
          curl -L -o asciidoctor-intellij-plugin.zip https://github.com/asciidoctor/asciidoctor-intellij-plugin/releases/download/0.41.2/asciidoctor-intellij-plugin-0.41.2.zip
          unzip asciidoctor-intellij-plugin.zip
        shell: bash
      - name: Download Grazie plugin for grammar checks # https://plugins.jetbrains.com/plugin/12175-grazie/versions
        run: |
          curl -L -o grazie.zip 'https://plugins.jetbrains.com/plugin/download?rel=true&updateId=257026'
          unzip grazie.zip
        shell: bash
      - name: Download Grazie Professional plugin for grammar checks # https://plugins.jetbrains.com/plugin/16136-grazie-professional/versions
        run: |
          curl -L -o grazie-pro.zip 'https://plugins.jetbrains.com/plugin/download?rel=true&updateId=260567'
          unzip grazie-pro.zip
        shell: bash
      - name: Create empty folder to overwrite disabled plugin
        run: |
          mkdir empty
        shell: bash
      - name: Get one more commit so Qodana can identify the changes
        run: git fetch --deepen=1
        shell: bash
      - name: 'Qodana for Docs'
        uses: JetBrains/qodana-action@v2023.3.0
        with:
          upload-result: true
          # https://hub.docker.com/r/jetbrains/qodana-jvm-community/tags
          # this disables the Gradle plugin to avoid the Gradle initialization and the dependency download
          # as that is not necessary for the Grazie and AsciiDoc plugins to check spelling and links.
          # TODO: the plugin `org.jetbrains.plugins.gradle` should also be suppressed, but the parameter doesn't allow
          # a comma when called from the Qodana action. Therefore overwrite it with an empty folder.
          args: >
            --linter,jetbrains/qodana-jvm-community:2023.3,
            --property=idea.suppressed.plugins.id=com.intellij.gradle,
            -v,${{ github.workspace }}/grazie:/opt/idea/plugins/grazie,
            -v,${{ github.workspace }}/empty:/opt/idea/plugins/gradle-java,
            -v,${{ github.workspace }}/grazie-pro:/opt/idea/plugins/grazie-pro,
            -v,${{ github.workspace }}/asciidoctor-intellij-plugin:/opt/idea/plugins/asciidoctor-intellij-plugin,
            --baseline,qodana-baseline.sarif.json
      - name: Upload Sarif report to GitHub Code Scanning Alerts
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json

  on-failure:
    runs-on: ubuntu-latest
    needs: ['adjust-version', 'generate-docs', 'validate-adoc']
    if: failure()
    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
